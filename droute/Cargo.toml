[package]
name = "droute"
version = "0.1.0-alpha.1"
authors = ["Harry Ying <lexugeyky@outlook.com>"]
edition = "2018"
description = "Routing mechanism lib for dcompass the DNS server."
repository = "https://github.com/LEXUGE/dcompass"
license = "GPL-3.0"
readme = "README.md"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html
[features]
# common denominator for DoH and DoT, should not be used by end-users
crypto = ["rustls", "webpki-roots"]
dot = ["trust-dns-rustls", "crypto"]
doh = ["trust-dns-https", "crypto"]

geoip = ["maxminddb"]

# enable all features
all = ["dot", "doh", "geoip"]

[dependencies]
# DNS-implementation related dependencies
trust-dns-server = "^0.20"
trust-dns-client = { version = "^0.20", default-features = false, features = ["dnssec-ring"] }
trust-dns-https = { version = "^0.20", optional = true }
trust-dns-proto = { version = "^0.20", features = ["serde-config"] }
trust-dns-rustls = { version = "^0.20", optional = true }
rustls = {version = "^0.19", features = ["dangerous_configuration"], optional = true }
webpki-roots = { version = "^0.21", optional = true }

maxminddb = { version = "^0.17", optional = true }

# Async-aware dependencies
futures = "^0.3"
tokio = { version = "^1.3", features = ["rt-multi-thread", "net", "fs", "macros", "io-util"]}

# Logic-needed dependencies
cidr-utils = "^0.5"
once_cell = "^1.7"
dmatcher = {version = "^0.1", path = "../dmatcher"}
log = "^0.4"
serde = { version = "^1.0", features = ["derive", "rc"] }
# CLru supports async, but it is not published yet.
clru = "^0.5"
thiserror = "^1.0"
async-trait = "^0.1"
dyn-clonable = "^0.9"
bb8 = "^0.7"

# (de)compression libs (TODO: can we rewrite it to make it async?)
niffler = "^2"

[dev-dependencies]
tokio-test = "^0.4"
criterion = { version = "^0.3", features = ["async_tokio"]}

[[bench]]
name = "benchmark"
harness = false

[package.metadata.cargo-all-features]
# If your crate has a large number of optional dependencies, skip them for speed
skip_optional_dependencies = true
